name: Bug Report
description: Report a bug in ReactUse to help us improve
labels: ['bug', 'needs reproduction']
body:
  - type: markdown
    attributes:
      value: |
        Thank you for taking the time to file a bug report for ReactUse. Before submitting, please search existing issues to avoid duplicates.

        For general questions or help, please use our [Discussions](link_to_discussions) section.
  - type: input
    attributes:
      label: Affected Hook(s)
      description: Which specific hook(s) are you experiencing issues with?
      placeholder: e.g., useLocalStorage, useDebounce
    validations:
      required: true
   - type: textarea
    attributes:
      label: Bug Description
      description: Provide a clear and concise description of the bug.
      placeholder: When using useLocalStorage with a complex object, the stored value becomes undefined after a page refresh.
    validations:
      required: true
  - type: textarea
    attributes:
      label: Steps to Reproduce
      description: List the steps to reproduce the behavior. If possible, provide a minimal reproduction repository or CodeSandbox link.
      placeholder: |
        1. Install the hook
        2. Import useLocalStorage from the package
        3. Call useLocalStorage with a complex object
        4. Refresh the page
        5. Observe that the stored value is undefined
    validations:
      required: true
  - type: textarea
    attributes:
      label: Expected vs Actual Behavior
      description: Describe what you expected to happen and what actually happened.
      placeholder: |
        Expected: The complex object should persist in localStorage and be retrieved correctly after a page refresh.
        Actual: The value becomes undefined after a page refresh.
    validations:
      required: true
  - type: textarea
    attributes:
      label: Code Snippet
      description: Add a minimal code snippet to demonstrate the issue.
      render: typescript
      placeholder: |
        import { useLocalStorage } from '#';

        const MyComponent = () => {
          const [value, setValue] = useLocalStorage('myKey', { complex: 'object' });
          // ...
        }
    validations:
      required: true
  - type: textarea
    attributes:
      label: Environment
      description: Please provide information about your development environment.
      render: markdown
      placeholder: |
        - OS: [e.g., macOS 12.6]
        - Browser: [e.g., Chrome 98.0.4758.102]
        - Node.js version: [e.g., 16.14.2]
        - React version: [e.g., 18.2.0]
        - TypeScript version (if applicable): [e.g., 4.9.5]
    validations:
      required: true
  - type: dropdown
    attributes:
      label: Affected Area(s)
      description: Select all areas affected by this bug.
      multiple: true
      options:
        - 'Core functionality'
        - 'TypeScript types'
        - 'Performance'
        - 'Browser compatibility'
        - 'Server-side rendering'
    validations:
      required: true
        - type: textarea
    attributes:
      label: Additional Context
      description: Add any other context about the problem here (e.g., logs, screenshots, possible solutions).
    validations:
      required: false
  - type: checkboxes
    attributes:
      label: Confirmations
      description: Please confirm the following
      options:
        - label: I have searched the existing issues and this is not a duplicate.
          required: true
        - label: I have tested this issue with the latest version of the affected hook or package.
          required: true
        - label: I have included a minimal code example or reproduction link (if applicable).
          required: true